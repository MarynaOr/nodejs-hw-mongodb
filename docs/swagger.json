{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "My contacts app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of my contacts app"
  },
  "servers": [
    {
      "url": "https://nodejs-hw-mongodb-4ihc.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Contacts",
      "description": "Operations about contacts."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    }
  ],
  "paths": {
    "/contacts": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get list of contacts",
        "operationId": "getContacts",
        "description": "Get list of users with this endpoint",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": { "type": "integer" },
            "example": 1
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": { "type": "integer" },
            "example": 10
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": { "type": "string" },
            "description": "All contact's fields can be mentioned. Default value - _id",
            "example": "age"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "example": "asc"
          },
          {
            "in": "query",
            "name": "contactType",
            "schema": {
              "type": "string",
              "enum": ["work", "home", "personal"]
            },
            "example": "home"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found contacts!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": { "type": "integer", "example": 200 },
                    "message": { "type": "string", "example": "Successfully found contacts!" },
                    "data": {
                      "type": "object",
                      "required": [
                        "data",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": { "$ref": "#/components/schemas/contact" }
                        },
                        "page": { "type": "integer", "example": 2 },
                        "perPage": { "type": "integer", "example": 4 },
                        "totalItems": { "type": "integer", "example": 4 },
                        "totalPages": { "type": "integer", "example": 4 },
                        "hasNextPage": { "type": "boolean", "example": false },
                        "hasPreviousPage": { "type": "boolean", "example": true }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "post": {
        "tags": ["Contacts"],
        "summary": "Create contact",
        "operationId": "createContact",
        "description": "Create a contact with payload. **userId** should NOT be in request body, it is derived from auth.",
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["name", "phoneNumber"],
                "properties": {
                  "name": {
                    "description": "Contact's name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "phoneNumber": {
                    "description": "Contact's phone number",
                    "type": "string",
                    "example": "+380000000003"
                  },
                  "email": {
                    "description": "Contact's email",
                    "type": "string",
                    "example": "dmytro3@example.com"
                  },
                  "isFavourite": {
                    "description": "Is Contact favourite?",
                    "type": "boolean",
                    "example": false
                  },
                  "contactType": {
                    "description": "Contact's type",
                    "type": "string",
                    "enum": ["work", "home", "personal"]
                  },
                  "photo": {
                    "description": "Link to contact's photo",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": { "type": "integer", "example": 201 },
                    "message": { "type": "string", "example": "Successfully created a contact!" },
                    "data": { "$ref": "#/components/schemas/contact" }
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" }
        }
      }
    },
    "/contacts/{id}": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get contact by id",
        "operationId": "getContact",
        "description": "Get contact by id",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" },
            "example": "65ca67e7ae7f10c88b598384"
          }
        ],
        "responses": {
          "200": {
            "description": "Get contact by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": { "type": "integer", "example": 200 },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contact with id 65ca67e7ae7f10c88b598384!"
                    },
                    "data": { "$ref": "#/components/schemas/contact" }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "patch": {
        "tags": ["Contacts"],
        "summary": "Update contact by id",
        "operationId": "updateContact",
        "description": "Update contact fields by id. **userId** should NOT be included in request body.",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" },
            "example": "65ca67e7ae7f10c88b598384"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "example": "+380000000003"
                  },
                  "email": {
                    "type": "string",
                    "example": "dmytro3@example.com"
                  },
                  "isFavourite": {
                    "type": "boolean",
                    "example": false
                  },
                  "contactType": {
                    "type": "string",
                    "enum": ["work", "home", "personal"]
                  },
                  "photo": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": { "type": "integer", "example": 200 },
                    "message": { "type": "string", "example": "Successfully updated contact!" },
                    "data": { "$ref": "#/components/schemas/contact" }
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/400" },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      },
      "delete": {
        "tags": ["Contacts"],
        "summary": "Delete contact by id",
        "operationId": "deleteContact",
        "description": "Delete a contact by id",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" },
            "example": "65ca67e7ae7f10c88b598384"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message"],
                  "properties": {
                    "status": { "type": "integer", "example": 200 },
                    "message": { "type": "string", "example": "Successfully deleted contact!" }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/401" },
          "404": { "$ref": "#/components/responses/404" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "contact": {
        "type": "object",
        "required": ["_id", "name", "phoneNumber", "userId"],
        "properties": {
          "_id": {
            "description": "Contact's id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "name": {
            "description": "Contact's name",
            "type": "string",
            "example": "John Doe"
          },
          "phoneNumber": {
            "description": "Contact's phone number",
            "type": "string",
            "example": "+380000000003"
          },
          "email": {
            "description": "Contact's email",
            "type": "string",
            "example": "dmytro3@example.com"
          },
          "isFavourite": {
            "description": "Contact's favourite.",
            "type": "boolean",
            "example": false
          },
          "contactType": {
            "description": "Contact's type",
            "type": "string",
            "enum": ["work", "home", "personal"]
          },
          "userId": {
            "description": "Contacts's user id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "photo": {
            "description": "Link to contact's photo",
            "type": "string",
            "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
          }
        }
      },
      "errors": {
        "type": "object",
        "required": ["message", "path", "type", "context"],
        "properties": {
          "message": {
            "type": "string",
            "example": "Phone number is required"
          },
          "path": {
            "type": "array",
            "example": ["phoneNumber"]
          },
          "type": {
            "type": "string",
            "example": "any.required"
          },
          "context": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string",
                "example": "phoneNumber"
              },
              "key": {
                "type": "string",
                "example": "phoneNumber"
              }
            }
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Bad request error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["status", "message", "data"],
              "properties": {
                "status": { "type": "integer", "example": 400 },
                "message": { "type": "string", "example": "BadRequestError" },
                "data": {
                  "type": "object",
                  "required": ["message", "errors"],
                  "properties": {
                    "message": { "type": "string", "example": "Bad Request" },
                    "errors": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/errors" }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["status", "message", "data"],
              "properties": {
                "status": { "type": "integer", "example": 401 },
                "message": { "type": "string", "example": "UnauthorizedError" },
                "data": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": { "type": "string", "example": "Session not found" }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not found error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["status", "message", "data"],
              "properties": {
                "status": { "type": "integer", "example": 404 },
                "message": { "type": "string", "example": "NotFoundError" },
                "data": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": { "type": "string", "example": "Contact not found" }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}